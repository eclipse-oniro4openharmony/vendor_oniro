diff --git a/device/plugins/native_daemon/src/call_stack.cpp b/device/plugins/native_daemon/src/call_stack.cpp
index d10868e88..e1940a651 100644
--- a/device/plugins/native_daemon/src/call_stack.cpp
+++ b/device/plugins/native_daemon/src/call_stack.cpp
@@ -519,8 +519,12 @@ bool CallStack::DoUnwind2(const VirtualThread &thread, std::vector<CallFrame> &c
         tempRegs.push_back((uintptr_t)regs_[i]);
     }
     regs->SetRegsData(tempRegs);
+#else
+#ifdef target_cpu_x86_64
+    std::shared_ptr<DfxRegs> regs = std::make_shared<DfxRegsX86_64>();
 #else
     std::shared_ptr<DfxRegs> regs = std::make_shared<DfxRegsArm64>();
+#endif
     regs->SetRegsData(reinterpret_cast<uintptr_t*>(regs_), regsNum_);
 #endif
 
diff --git a/device/plugins/native_hook/BUILD.gn b/device/plugins/native_hook/BUILD.gn
index a802003ed..0b5ca9399 100644
--- a/device/plugins/native_hook/BUILD.gn
+++ b/device/plugins/native_hook/BUILD.gn
@@ -42,6 +42,11 @@ ohos_source_set("native_hook_source") {
     "src/sampling.cpp",
     "src/stack_writer.cpp",
   ]
+
+  if (target_cpu == "x86_64") {
+    sources += ["//base/hiviewdfx/faultloggerd/interfaces/innerkits/unwinder/getcontext_x86_64.S"]
+  }
+
   include_dirs = [
     "./include",
     "../api/include",
@@ -96,6 +101,9 @@ ohos_shared_library("native_hook") {
     defines = [ "HAVE_HILOG" ]
     external_deps = [ "hilog:libhilog_base" ]
   }
+  if (hiprofiler_use_libunwinder) {
+    external_deps += [ "faultloggerd:libunwinder" ]
+  }
   version_script = "libnative_hook.map"
   install_enable = true
   subsystem_name = "${OHOS_PROFILER_SUBSYS_NAME}"
diff --git a/device/services/ipc/include/socket_context.h b/device/services/ipc/include/socket_context.h
index eff0438e1..60e3d60e8 100644
--- a/device/services/ipc/include/socket_context.h
+++ b/device/services/ipc/include/socket_context.h
@@ -25,6 +25,8 @@
 #if defined(__i386__) || defined(__x86_64__)
 const static char DEFAULT_UNIX_SOCKET_PATH[] = "hiprofiler_unix_socket";
 const static char DEFAULT_UNIX_SOCKET_HOOK_PATH[] = "hook_unix_socket";
+const static char DEFAULT_UNIX_SOCKET_FULL_PATH[] = "/dev/unix/socket/hiprofiler_unix_socket";
+const static char DEFAULT_UNIX_SOCKET_HOOK_FULL_PATH[] = "/dev/unix/socket/hook_unix_socket";
 const static char FFRT_PROFILER_UNIX_SOCKET_PATH[] = "ffrt_profiler_unix_socket";
 const static char FFRT_PROFILER_UNIX_SOCKET_FULL_PATH[] = "/dev/unix/socket/ffrt_profiler_unix_socket";
 const static char NETWORK_PROFILER_UNIX_SOCKET_PATH[] = "network_profiler_unix_socket";
